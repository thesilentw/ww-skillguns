ACTOR SMGLoaded : Ammo
{
	Inventory.MaxAmount 32
}

ACTOR SMGClip : Ammo replaces ClipBox
{
	Inventory.Amount 32
	Inventory.MaxAmount 96
	Ammo.BackpackAmount 16
	Ammo.BackpackMaxAmount 192
	Inventory.PickupMessage "Picked up a box of SMG bullets."
	States
	{
	Spawn:
		AMMO A -1
		Stop
	}
}

ACTOR SMGClip2 : SMGClip replaces CellPack {}

ACTOR SMGSubLevelCounter : Inventory
{
	Inventory.MaxAmount 0x7fffffff
}

ACTOR SkillSMG : SkillWeapon replaces Chaingun
{
	Weapon.AmmoType1 "SMGLoaded"
	Weapon.AmmoUse1 1
	Weapon.AmmoGive1 0
	Weapon.AmmoType2 "SMGClip"
	Weapon.AmmoUse2 0
	Weapon.AmmoGive2 16
	Inventory.PickupMessage "Found an SMG! (slot 3)"
	Tag "Sterling Arms ISIS"
	+Weapon.NoAlert
	+Weapon.NoAutoFire
	+Weapon.Ammo_Optional
	States
	{
	Spawn:
		BRRP A -1
		Stop
	Select:
		BRRG A 1 Offset(0, -320)
		Goto SelectAnim
	Ready:
		BRRG A 1 A_WeaponReady(WRF_ALLOWRELOAD)
		Loop
	AltfireReturn:
		BRRG A 1 Offset(-72, 74)
		BRRG A 1 Offset(-56, 61)
		BRRG A 1 Offset(-42, 52)
		BRRG A 1 Offset(-30, 45)
		BRRG A 1 Offset(-20, 40)
		BRRG A 1 Offset(-12, 37)
		BRRG A 1 Offset(-6, 35)
		BRRG A 1 Offset(-3, 34)
		BRRG A 1 Offset(-1, 33)
		Goto Ready
	Fire:
		BRRG A 0 A_PlaySound("pistol/ready", 6)
	FireLoop:
		BRRG A 0 A_JumpIfInventory("TriggerPullCounter", (CallACS("GunSkillCheck") / 5), "WeaponFire")
		BRRG A 0 A_JumpIfInventory("TriggerPullCounter", CallACS("GunSkillCheck"), "WeaponFire")
		BRRG A 0 A_JumpIfInventory("WeaponSkillActual", 100, "WeaponFire")
		BRRG A 0 A_GiveInventory("TriggerPullCounter", 1)
		BRRG A 0 ACS_NamedExecuteWithResult("GunJitter2")
		BRRG A 0 A_Jump(256, "RandomJitter1","RandomJitter2","RandomJitter3","RandomJitter4")
	RandomJitter1:
		BRRG A 1 Offset(-1,32)
		BRRG A 0 A_Refire("FireLoop")
		Goto ReleaseTrigger
	RandomJitter2:
		BRRG A 1 Offset(1,32)
		BRRG A 0 A_Refire("FireLoop")
		Goto ReleaseTrigger
	RandomJitter3:
		BRRG A 1 Offset(-1,34)
		BRRG A 0 A_Refire("FireLoop")
		Goto ReleaseTrigger
	RandomJitter4:
		BRRG A 1 Offset(1,34)
		BRRG A 0 A_Refire("FireLoop")
		Goto ReleaseTrigger
	ReleaseTrigger:
		BRRG A 1 A_TakeInventory("TriggerPullCounter", 100)
		Goto Ready
	WeaponFire:
		BRRG A 0 A_JumpIfNoAmmo("Dryfire")
		BRRG A 0 A_PlaySound("smg/fire", CHAN_WEAPON)
		BRRG A 0 A_GunFlash
		BRRG A 1 Offset(0,40) A_FireBullets(2.5, 3, -1, 9, "SkillPuffPlayer", FBF_USEAMMO)
		BRRG A 0 ACS_NamedExecuteWithResult("GunRecoil3")
		BRRG A 0 A_Recoil((CallACS("GunSkillCheck") / 90.0) * cos(pitch))
		BRRG A 1 Offset(0,38) A_GiveInventory("SMGSubLevelCounter", 1)
		BRRG A 1 Offset(0,36) A_AlertMonsters
		BRRG A 0 A_JumpIfInventory("SMGSubLevelCounter", 7, "GiveLevelCounter")
		BRRG A 0 A_Refire("WeaponFire")
	WeaponFireRelease:
		BRRG A 0 A_TakeInventory("TriggerPullCounter", 3)
		BRRG A 0 A_JumpIfInventory("TriggerPullCounter", 1, "WeaponFire")
		BRRG A 1 Offset(1,45)
		BRRG A 1 Offset(1,55)
		BRRG A 1 Offset(1,53) A_WeaponReady(WRF_NOBOB)
		BRRG A 1 Offset(1,51) A_WeaponReady(WRF_NOBOB)
		BRRG A 1 Offset(0,49) A_WeaponReady(WRF_NOBOB)
		BRRG A 1 Offset(0,46) A_WeaponReady(WRF_NOBOB)
		BRRG A 1 Offset(0,43) A_WeaponReady(WRF_NOBOB)
		BRRG A 1 Offset(0,40) A_WeaponReady(WRF_NOBOB)
		BRRG A 1 Offset(0,37) A_WeaponReady(WRF_NOBOB)
		BRRG A 1 Offset(0,35) A_WeaponReady(WRF_NOBOB)
		BRRG A 1 Offset(0,34) A_WeaponReady(WRF_NOBOB)
		BRRG A 1 Offset(0,33) A_WeaponReady(WRF_NOBOB)
		Goto Ready
	GiveLevelCounter:
		BRRG A 0 A_GiveInventory("WeaponSkillLevelUpCounter", 1)
		BRRG A 0 A_TakeInventory("SMGSubLevelCounter", 999)
		BRRG A 0 A_Refire("WeaponFire")
		Goto WeaponFireRelease
	Dryfire:
		BRRG A 1 Offset(0,35) A_PlaySound("Pistol/dryfire", 5)
		BRRG A 1 Offset(0,34) A_TakeInventory("TriggerPullCounter",999)
		BRRG A 1 Offset(0,33)
		Goto Ready
	Reload:
		BRRG A 0 A_JumpIfInventory("SMGLoaded",32, 2)
		BRRG A 0 A_JumpIfInventory("SMGClip", 1, "ReloadBegin")
		BRRG A 1
		Goto Ready
	ReloadBegin:
		BRRG B 1 Offset(0,34) A_PlaySound("Pistol/reloadstart",6)
		BRRG B 1 Offset(0,36)
		BRRG C 1 Offset(0,39)
		BRRG C 1 Offset(0,41)
		BRRG D 1 Offset(0,42)
		BRRG E 1 A_SetTics(CallACS("GunSkillCheck") / 4)
		BRRG F 1 Offset(0,41) A_PlaySound("smg/ClipOut",5)
		BRRG F 1 Offset(0,39)
		BRRG G 1 Offset(0,36)
		BRRG H 1 Offset(1,33)
		BRRG I 1 Offset(1,32)
		BRRG J 1 Offset(1,31)
		BRRG K 1 Offset(2,30)
		BRRG L 1 Offset(4,28)
		BRRG L 1 Offset(5,27)
		BRRG L 1 Offset(4,29)
		BRRG L 1 Offset(3,31)
		BRRG L 1 Offset(1,32)
		BRRG L 1 Offset(-1,33)
	ReloadSkillLoop:
		BRRG L 1 A_SetTics(CallACS("GunSkillCheck") / 2)
	ReloadLoop:
		TNT1 A 0 A_TakeInventory("SMGClip",1)
		TNT1 A 0 A_GiveInventory("SMGLoaded",1)
		TNT1 A 0 A_JumpIfInventory("SMGLoaded",32,"ReloadFinish")
		TNT1 A 0 A_JumpIfInventory("SMGClip",1,"ReloadLoop")
		Goto ReloadFinish
	ReloadFinish:
		BRRG M 1 Offset(-2,35) A_PlaySound("smg/ClipIn",5)
		BRRG M 1 Offset(-3,38)
		BRRG N 1 Offset(-4,43)
		BRRG N 1 Offset(-1,44)
		BRRG G 1 Offset(2,43)
		BRRG G 1 Offset(5,44)
		BRRG F 1 Offset(8,45)
		BRRG E 1 Offset(11,46)
		BRRG E 1 Offset(12,48)
		BRRG E 1 Offset(10,47)
		BRRG E 1 Offset(7,46)
		BRRG E 1 Offset(4,45)
		BRRG E 1 Offset(2,44)
		BRRG E 1 Offset(1,43)
		BRRG E 1 Offset(1,42) A_SetTics(CallACS("GunSkillCheck") / 4)
		BRRG D 1 Offset(2,44)
		BRRG D 1 Offset(4,46)
		BRRG D 1 Offset(7,47)
		BRRG D 1 Offset(8,48)
		BRRG D 1 Offset(10,45) A_PlaySound("smg/Clipslap",5)
		BRRG D 1 Offset(13,46)
		BRRG D 1 Offset(15,47)
		BRRG D 1 Offset(19,47)
		BRRG D 1 Offset(23,47)
		BRRG D 1 Offset(30,48)
		BRRG D 1 Offset(33,47)
		BRRG D 1 Offset(34,46)
		BRRG C 1 Offset(31,45)
		BRRG C 1 Offset(27,43)
		BRRG B 1 Offset(20,40)
		BRRG A 1 Offset(10,37)
		BRRG A 1 Offset(-1,34)
		Goto Ready
	Flash:
		TNT1 AA 0 A_Jump(256,"Flash1","Flash2")
		Goto LightDone
	Flash1:
		BRRF A 2 BRIGHT A_Light2
		TNT1 A 2 BRIGHT A_Light1
		TNT1 A 2 A_Light0
		Goto LightDone
	Flash2:
		BRRF B 2 BRIGHT A_Light2
		TNT1 A 2 BRIGHT A_Light1
		TNT1 A 2 A_Light0
		Goto LightDone
	}
}

ACTOR SkillSMGGiver : CustomInventory replaces PlasmaRifle
{
	Inventory.PickupMessage "Found an SMG! (slot 3)"
	Inventory.PickupSound "misc/w_pkup"
	States
	{
	Spawn:
		BRRP A -1
		Stop
	Pickup:
		TNT1 A 0 A_GiveInventory("SkillSMG", 1)
		Stop
	}
}